error_log logs/error.log error;

pid logs/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Rich Elasticsearch/Kibana compatible JSON log format
    log_format json escape=json
    ' {"time": "$time_iso8601",'
        '"message": "$request",'
        '"request": {'
            '"headers": {'
                '"accept": "$http_accept",'
                '"content-type": "$content_type",'
                '"referer": "$http_referer",'
                '"user-agent": "$http_user_agent"'
            '},'
            '"method": "$request_method",'
            '"remoteAddress": "$remote_addr",'
            '"remoteUser": "$remote_user",'
            '"host": "$host",'
            '"url": "$request_uri",'
            '"id": "$request_id"'

        '},'
        '"response": {'
            '"contentLength": $body_bytes_sent,'
            '"responseTime": $request_time,'
            '"statusCode": $status'
        '},'
        '"proxy_host": "$proxy_host",'
        '"upstream_addr": "$upstream_addr"'
    '}';

    access_log logs/access.log json;

    sendfile on;
    tcp_nopush on;

    #--------------------------------------------------------------------------
    # Pass Client IP to Container
    #--------------------------------------------------------------------------
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    #--------------------------------------------------------------------------
    # Application
    #--------------------------------------------------------------------------
    server {
        listen 80 default_server;
        access_log logs/access.log json;

        location / {
            include /etc/nginx/includes/proxy.conf;
            rewrite ^%BASE_PATH%(.*) $1 break;
            proxy_pass %APP_URL%;
        }
    }
}

